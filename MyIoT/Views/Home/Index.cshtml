




<div class="container">
    <div class="title row">
        <div class="col-md-12">
            <img src="~/Content/banner2.jpg" alt="" />
            <h1 class="title">IoT Test Enpoint</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h3>
                @{ string postUrl = Url.Action("Index", "SensorData", null, this.Request.Url.Scheme);}
                Post Data To: <strong>@postUrl</strong>
            </h3>
            Test your IoT devices by having them send a POST to <em>@postUrl</em> and the raw data will be displayed below
        </div>
    </div>
    <div class="dataheader row">
        <div class="col-md-10">
            Received Messages:
        </div>
    </div>
    <div class="datacontext row">
        <div class="col-md-12">

            <ul id="sensorData"></ul>

        </div>
    </div>


</div>


@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        // Reference the auto-generated proxy for the hub.
        var sensor = $.connection.sensorDataHub;
        // Create a function that the hub can call back to display messages.
        sensor.client.addNewMessageToPage = function (message) {
            // Add the message to the page.
            $('#sensorData').append('<li><strong>' + message + '</strong></li>');
        };

        $.connection.hub.start();
    </script>
}